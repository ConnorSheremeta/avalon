<% if flash[:error] %><div class='alert alert-error'><%= flash[:error] %></div><% end %>

<%= form_for @mediaobject, html: { class: 'form-vertical', id: 'basic_metadata_form' } do |media| %>
  <%= hidden_field_tag :step, @active_step %>
  
  <%# This is not very DRY for a first pass but that can come once it shows some promise %>
  <%= render partial: 'text_field', 
             locals: {media: media, field: :title, 
                      options: {required: true, tooltip: true}} %>

  <%# This clearly needs to be refactored once it works right and there is proper
      test coverage %>
  <%= render partial: 'text_fields',
             locals: {media: media, field: :creator,
                      count: [3, @mediaobject.creator.length].max,
                      text_label: 'Main contributor(s)', 
                      options: {tooltip: true}} %>
                    
  <%= render partial: 'text_field', 
             locals: {media: media, field: :date_issued, 
                      options: {required: true}} %>

  <%= render partial: 'text_field', 
             locals: {media: media, field: :date_created,
                      text_label: 'Creation date'} %>

  <%= render partial: 'text_area', 
             locals: {media: media, field: :abstract,
                      text_label: 'Description'} %>

  <%= render partial: 'text_fields',
             locals: {media: media, field: :contributor,
                      count: [3, @mediaobject.contributor.length].max,
                      text_label: 'Contributor(s)', 
                      options: {dynamic: true}} %>

  <%= render partial: 'text_fields',
             locals: {media: media, field: :publisher,
                      count: [3, @mediaobject.publisher.length].max,
                      text_label: 'Publisher(s)', 
                      options: {dynamic: true}} %>

  <%= render partial: 'text_fields',
             locals: {media: media, field: :genre,
                      count: [3, @mediaobject.genre.length].max,
                      text_label: 'Genre(s)', 
                      options: {dynamic: true}} %>
  <%= render partial: 'text_fields',
             locals: {media: media, field: :topical_subject,
                      count: [3, @mediaobject.topical_subject.length].max,
                      text_label: 'Subject(s)', 
                      options: {dynamic: true}} %>
  <%= render partial: 'text_fields',
             locals: {media: media, field: :temporal_subject,
                      count: [3, @mediaobject.temporal_subject.length].max,
                      text_label: 'Time period(s)', 
                      options: {dynamic: true}} %>
  <%= render partial: 'text_fields',
             locals: {media: media, field: :geographic_subject,
                      count: [3, @mediaobject.geographic_subject.length].max,
                      text_label: 'Location(s)', 
                      options: {dynamic: true}} %>
                      
  <%= render partial: 'text_fields',
             locals: {media: media, field: :collection,
                      count: [3, @mediaobject.collection.length].max,
                      text_label: 'Collection(s)', 
                      options: {dynamic: true}} %>

    <div class="form-actions">
      <%= render 'workflow_buttons', form: media %>
    </div>  
<% end %>

<% content_for :page_scripts do %>
  <%= javascript_include_tag 'dynamic_fields' %>
<script>
  $().ready(function() {
    DynamicFields.initialize();

    /* 
     * Disable the default action for tooltips if the Javascript for the
     * inline tip is able to work. Since we know that these will have additional
     * data attributes there is no need for another class hook
     */
     $('a[data-tooltip]').each(function() {
       $(this).removeAttr('href');
     });

     $('a[data-tooltip]').click(function(event) {
       event.preventDefault();

       $('#title_tooltip').toggleClass('in');
     });
  });
</script>
<% end %>

