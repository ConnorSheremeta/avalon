<%#
Copyright 2011-2015, The Trustees of Indiana University and Northwestern
  University.  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.

You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed
  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
  CONDITIONS OF ANY KIND, either express or implied. See the License for the
  specific language governing permissions and limitations under the License.
---  END LICENSE_HEADER BLOCK  ---
%>
<% content_for :additional_head_content do %>
  <link rel="alternate" type="application/json+oembed" href="<%= "#{oembed_url(format: 'json', url: share_link_for(@currentStream))}" %>" />
  <link rel="alternate" type="application/xml+oembed" href="<%= "#{oembed_url(format: 'xml', url: share_link_for(@currentStream))}" %>" />
<% end %>

<div class="container">
<% f_start, f_end = parse_media_fragment params['t'] %>
<div class="row">
  <div class="col-sm-8" id="left_column">
    <section id="content" class="avalon-player" style="width: 100%; visibility: hidden;" tabIndex="-1">
      <% if @currentStream.present? and @currentStream.derivatives.present? %>
        <%= stylesheet_link_tag "mediaelement_rails/mediaelementplayer" =%>

        <% if @currentStreamInfo[:is_video] %>
          <%= master_file_meta_properties(@currentStream) do %>
            <video class="mejs-avalon" controls width="450" height="309" style="width: 100%; height: 100%" id="video-tag" poster="<%= @currentStreamInfo[:poster_image] if f_start == 0 %>" preload="auto">
              <% @currentStreamInfo[:stream_flash].each do |flash| %>
                <source src="<%= flash[:url] %>" data-quality="<%= flash[:quality] %>" data-plugin-type="flash" type="video/rtmp"/>
              <% end %>
              <% @currentStreamInfo[:stream_hls].each do |hls| %>
                <source src="<%= hls[:url] %>" data-quality="<%= hls[:quality] %>" data-plugin-type="native" type="application/vnd.apple.mpegURL"/>
              <% end %>
              <% if @currentStreamInfo[:captions_path].present? %>
                <track srclang="en" kind="subtitles" type="<%= @currentStreamInfo[:captions_format] %>" src="<%= @currentStreamInfo[:captions_path] %>"></track>
              <% end %>
            </video>
          <% end %>
        <% else %>
          <%= master_file_meta_properties(@currentStream) do %>
            <audio class="mejs-avalon" controls style="width: 100%;" id="video-tag" preload="true">
              <% @currentStreamInfo[:stream_flash].each do |flash| %>
                <source src="<%= flash[:url] %>" data-quality="<%= flash[:quality] %>" data-plugin-type="flash" type="audio/rtmp"/>
              <% end %>
              <% @currentStreamInfo[:stream_hls].each do |hls| %>
                <source src="<%= hls[:url] %>" data-quality="<%= hls[:quality] %>" data-plugin-type="native" type="application/vnd.apple.mpegURL"/>
              <% end %>
            </audio>
          <% end %>
        <% end %>
      <% end %>
      <%= render 'share' if will_partial_list_render? :share %>
    </section>

    <%= render file: '_track_scrubber.html.erb' %>
    <%= render file: '_add_to_playlist.html.erb' if current_user.present? %>
    <%= render 'workflow_progress' %>
    <%= render partial: 'sections',
        locals: {mediaobject: @mediaobject,
                 sections: @masterFiles,
                 activeStream: @currentStream} %>
  </div>

  <div class="col-sm-4" id="right-column">
    <div id="metadata_container" class="">
      <section id="metadata"><%= render "metadata_display" %></section>
    </div>
  </div>

</div>
</div>

<% content_for :page_scripts do %>
  <%= javascript_include_tag "mediaelement_rails/mediaelement-and-player" =%>
  <%= javascript_include_tag 'android_pre_play' %>
  <%= javascript_include_tag 'mediaelement-qualityselector/mep-feature-qualities' %>
  <%= javascript_include_tag 'me-thumb-selector' %>
  <%= javascript_include_tag 'mediaelement-skin-avalon/mep-feature-responsive' %>
  <%= javascript_include_tag 'avalon_player' %>
  <%= javascript_include_tag 'me-add-to-playlist' %>
  <%= javascript_include_tag 'me-track-scrubber' %>

  <%= stylesheet_link_tag "mediaelement-qualityselector/mep-feature-qualities" =%>
  <%= stylesheet_link_tag 'me-thumb-selector' %>
  <%= stylesheet_link_tag "mediaelement-skin-avalon/mejs-skin-avalon" =%>
  <%= stylesheet_link_tag 'me-add-to-playlist' %>
  <%= stylesheet_link_tag 'me-track-scrubber' %>

  <% if @currentStream.present? and @currentStream.derivatives.present? %>
  <script>
    function advancePlaylist() {
      nextUrl = $('div.panel-heading').has('a.current-section').nextAll('div[role="tab"]:first').find('a.playable').attr('href');
      if (nextUrl) {
        window.location = nextUrl + "?autostart=true";
      }
    }

    avalonPlayer = new AvalonPlayer($('#left_column'), <%= @currentStreamInfo.to_json.html_safe %>, {
      audioHeight: <%= MasterFile::AUDIO_HEIGHT %>,
      mobileDisplayedDuration: <%= @currentStream ? (@currentStream.duration.to_f / 1000).round : -1 %>,
      thumbnailSelector: <%= can?(:edit, @mediaobject) ? 'true' : 'false' %>,
      //addToPlaylist: <%= can?(:create, Playlist) ? 'true' : 'false' %>,
      addToPlaylist: <%= current_user.present? ? 'true' : 'false' %>,
      startQuality: '<%= current_quality(@currentStreamInfo) %>',
      customError: '<%= t("media_objects.player.customError").html_safe %>',
      playlistItemDefaultTitle: '<%= escape_javascript @currentStream.embed_title %>',
      displayTrackScrubber: true,
      // Default auto-hide behavior is quirky, we'll manage it ourselves below
      alwaysShowControls: true,
      autostart: <%= params[:autostart] == 'true' ? 'true' : 'false' %>,
      success: function(mediaElement, domObject, player) {
	player.media.addEventListener('ended', function(e) {
	    advancePlaylist();
	}, false);
      }
    });
    currentPlayer = avalonPlayer.player;

    // Only autohide for video
    if (currentPlayer.isVideo) {
      var $video = currentPlayer.container;
      var $controls = $video.find('.mejs-controls');
      var controls_hidden = false;

      setup_controls_autohide()
    }
    if ($('.me-cannotplay').length > 0) {
      // Hide section list if Flash isn't working
      $('#accordion').hide();
    }

    function setup_controls_autohide() {
      setup_controls_autohide_by_mouse_position();
      setup_controls_autohide_by_mouse_movement();
    }

    function setup_controls_autohide_by_mouse_position() {
      // Mouse enters video region: controls appear
      // Mouse leaves video region: controls hide
      $video.mouseleave(function() {
        controls_hide();
      });
      $video.mouseenter(function() {
        controls_show();
      });
    }

    function setup_controls_autohide_by_mouse_movement() {
      // Handle auto-hide controls for full screen video
      // Mouse moves: controls appear
      // Mouse doesn't move for 2 seconds: controls hide
      var delay = 2000;
      var t;
      $video.mousemove(function(){
        clearTimeout(t);
        if (controls_hidden) {
          controls_show();
        }

        t = setTimeout(function() {
          // Mouse has not been moved
          controls_hide();
        }, delay);
      });
    }

    function controls_hide() {
      // Stop any currently running animations
      $controls.stop();
      // Why slideUp? Not intuitive, but works ...
      $controls.slideUp();
      controls_hidden = true;
    }

    function controls_show() {
      $controls.stop();
      $controls.slideDown();
      // Sometimes the controls render in the wrong place, so we do:
      currentPlayer.setControlsSize();
      controls_hidden = false;
    }

  </script>
  <% end %>
<% end %>
