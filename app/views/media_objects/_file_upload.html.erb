<h2>Manage file(s)</h2>
<% unless @masterFiles.empty? %>
<section id="associated_files">
      <h4>Associated files</h4>
      <p>Update the display labels to change the information that end users will see. Changes persist once you select Update.</p>
      
	  <hr />
      <%= twitter_bootstrap_form_for @mediaobject do |file_list| %>
      <%= hidden_field_tag :donot_advance, true %>
      <%= hidden_field_tag :step, 'file-upload' %>
      
	  <table class="table table-striped">
	    <colgroup>
	      <col class="span1">
	      <col class="span4">
	      <col class="span4">
	      <col class="span1">
	      <col class="span1">
	    </colgroup>
	    
        <thead>
          <th></th>
          <th>Type</th>
          <th>Display label</th>
          <th>File name</th>
          <th>Size</th>
          <th>Delete</th>
        </thead>
		    <tbody>
		    <% @masterFiles.each do |part, i| %>
      		  <%= hidden_field_tag "parts[#{i}][pid]", part.pid  %>
  		      <tr>
                        <td>&nbsp;</td>
  		        <td>
  		          <% case part.file_format
  		             when 'Sound' %>
	    		       <i class="icon-volume-up"></i>
  		          <% when 'Moving image' %>
	    		       <i class="icon-film"></i>
	    		  <% else %>
			       <i class="icon-question-sign"></i>
  		          <% end %>
  		        </td>
  		        <td>
      		      <%= text_field_tag "parts[#{i}][label]", part.label, size: 30 %>
  		        </td>
  		        <td>
  		          <%= truncate(File.basename(part.file_location), length: 25) %>
      	  	  </td>
      	  	  <td>
      	  	    <strong><%= number_to_human_size(part.file_size) %></strong>
      	  	  </td>
      	  	  <td>
      	  	   <% if can? :edit, @mediaobject %>
      	 	     <!-- This should be refactored to act more in line with the typical Twitter bootstrap code at some point -->
          	 		 <%# On a Rails level this needs to be folded into the masterfiles
          	 		   # controller's destroy method to help remove more vestiges of the
          	 		   # catalog controller %>
         	         <%= check_box_tag "parts[#{i}][remove]", true %>
        	 	    <% end %>
      	 	    </td>
    	 	    </tr>
    	 	    <% end %>
  	 	  </tbody>
  	 	</table>
  <%= submit_tag "Update", donot_advance: true %>
<% end %>
  </section>
<% end %>

<section id="web_upload">
<fieldset id='uploader'>
  <h3>Upload through the web</h3>
  <p>Uploaded files must not exceed <%= number_to_human_size MasterFile::MAXIMUM_UPLOAD_SIZE %></p>

    <%= form_tag(master_files_path, :enctype=>"multipart/form-data", class: "uploader-form form-horizontal step") do -%>
      <input type="hidden" name="container_id" value="<%=h @mediaobject.pid %>"/>
      <input type="hidden" name="step" value="file_upload"/>

      <%= hidden_field_tag("container_content_type", container_content_type, :id => "file_upload_content_type") if defined?(container_content_type) %>

      <%- field_tag_options = defined?(uploader_options) ? uploader_options : {id: nil, multiple: true} %>

      <%= file_field_tag "Filedata[]", field_tag_options %>
      <%= submit_tag("Upload file", :name=>"upload_file", class: "btn") %>

      <%= hidden_field_tag(:new_asset, true, :id => "files_new_asset") if params[:new_asset] %>
      <%= hidden_field_tag("id",params[:id], :id => "file_upload_id") if params[:id] %>
      <%= hidden_field_tag(:original, params[:original], :id => "files_original") %>
    <% end %>
</fieldset>
</section>   
    
<section id="dropbox_upload">
<h3>Import from a dropbox</h3>
<p>For large files use the dropbox location to import files. Once they have 
been uploaded you can select them from the list below. Associated files will 
be processed as soon as you continue to the next step.</p>
<%= render "dropbox_details" %>
<%= render partial: "dropbox_file_navigator", locals: {file_set: @dropbox_files} %>
</section>

<div class="row-fluid">
  <div class="span12">
    <%= twitter_bootstrap_form_for @mediaobject, html: { class: "form-horizontal"} do |vid| %>
      <%= render "workflow_buttons", form: vid %>
    <% end %>		
  </div>
</div>

<% content_for :page_scripts do %>
  <script>
    /* Hide the alert dialog on the page loading if Javascript is enabled */
    <% unless flash[:upload] %>$('#upload_format').hide();<% end %>
  </script>
<% end %>
